$Header: /cvsroot/ener-j/ener-j/src/org/enerj/enhancer/ToDo.txt,v 1.4 2006/05/01 00:28:23 dsyrstad Exp $

Enhancer To-Do List:

Priority A:
-----------


- Fix clone generation as described in emitClone() @todo's

- Does instructionList.insert() in enhanceClone, et.al. also shift branch instructions?
  if this happens:
        if (cond) {
           do something <<-- code inserted here
           return clone;
        }
        else {
            do somethingelse;
            return clone;
        }
  - We also need to shift line number attributes.

Priority B:
-----------
- DB Schema support

- Versioning support

- A version change to a super-class, but not the sub-class, should cause a version 
change to the subclass because the read/write object bytes/sequence may have changed.
Does this matter? Super class (new version?) is called to read the old bytes. Have
to examine class IDs of least-derived class all the way up to top-level persistable
to ensure that no change has occurred, or detect it if it has.

- DONE: static class ID (CID) to compare client vs. DB versions. Java uses a MessageDigest
Secure Hash Algorithm (SHA) to generate an 8 byte serialVersionUID. It would be
nice if our stuff would generate an ID that is always the same for an unchanged class:
interfaces the same, super class the same (same CID in super), fields the same (same
name, type, and scope), methods the same (? do we need this - YES - to support method
calls in queries). 


Priority C:
-----------

- Supporting Serializable/Externalizable classes may be problematic because they may
contain references to FCOs. FCOs could be declared Serializable at the top level and 
just output their OID in writeObject and readObject would load from the DB using the OID.

- Handle java.util.Timezone/SimpleTimeZone as SCO? Could just store the ID and re-look-it-up
with Timezone. However, the ID is a string, which would make this a special FCO.
Same with java.util.Currency. Hmmm. User could also persist this as a string.

- What about "refersTo" on a Map? Shouldn't there really be a refersTo for the key, 
and one for the value? It seems that ODMG ODL has this.

- Use java.sql.Blob for large object support?

- MetaData doesn't allow jar files when scanning source path. It probably should.

- Renaming tool to handle package/class renaming in database.

- Handle JDO?

- Support notion of non-persistent, transactional fields. See JDO spec.

- Technically, according to the VM Spec, generated fields should be marked Synthetic.


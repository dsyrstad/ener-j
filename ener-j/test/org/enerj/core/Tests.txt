$Header: /cvsroot/ener-j/ener-j/test/org/enerj/core/Tests.txt,v 1.1 2005/08/16 04:29:00 dsyrstad Exp $

Core Tests:

ObjectSerializer:
    + Test serialization of all possible types, primitive, SCOs, and FCOs. 
    + Test null and non-null objects.
    + Multiple FCOs nested deeply.
    + FCOs with circular references.
    + Test serialization of non-top-level Persistable. Make sure super-class
      info is persisted.
    + Use 0 and more precision on BigDecimal and 0 and more scale (note that scale cannot be negative).
    + Test comparator on TreeMap/Set. A Comparator without a no-arg constructor should throw
      ODMGRuntimeException.
    + Test shared SCOs within single FCO.
    - Test that a reloaded FCO with an SCO (now subclassed version, e.g., JavaUtilDateSCO) can be
      serialized again.
      - More generally, we should test store, load, store, load of a single object.

BasicODMG:
    + Test empty begin/commit and begin/abort transactions that do nothing. 
    + Test basic bind/lookup/unbind.
    + Try to start a transaction with an unopened database (exception).
    + Try to start a transaction with a recently closed database (exception).
    + Try to close a Database with an open transaction (Exception).

EnerJDatabase:
    + Test that an in-memory object created for one database can not be persisted to another db.
    + Test that a Database cannot be shared between threads while a txn is active.
    + Test that JVM instances of the same OID are preserved between transactions, as long as the
      instance is not GCed, as defined by JDO 5.5.4. 
    + Test JDO 5.5.1:  a transient (but enhanced) instance referenced by persistent instances 
      causes the transient object to get _persisted_ as if it were a new instance. This means that
      objects created outside of a transaction can later be referenced inside a transaction and they become
      new instances.

EnerJTransaction:
    + Test that a Transaction cannot be simulatenously shared between threads while it is open.
    + Test leave/join thread (and implicit leave via join).
    - Test that abort really rolls back. 
    - Test that commit really commits. 
    - Test checkpoint followed by abort rolls back only to point of commit.
    - Test that checkpoint holds locks on committed objects.
    - Test checkpoint followed by commit. Should commit everything and all locks should be released.
    - Test EnerJTransaction.setRetain/RestoreValues as the behavior is defined in JDO. I.e.:
        - Test setRetainValues. Should retain values after a commit, but hollow on abort
        - Test setRestoreValues. Should rollback in-memory object values on abort, but hollow on commit.
        - Test setRetainValues and setRestoreValues at same time. Objects should only be hollow if they
          were created during the transaction and the txn aborted.
        - Test that setRetain/RestoreValues can only be called outside an active txn.
    - Test lock.
    - Test tryLock.
    - Test lock/tryLock when locked by another database session in another thread.

    o- Implement the long abort/commit tests below when we implement flush to server on long transactions.
    o- abort() should rollback even on a long (many object mods) transaction. 
    o- commit should commit even on a long (many object mods) transaction.

Collections:
    + Generic Collection, Set, List, and Map test and test them against Java
      collections as a test of the tests.
    + Generic tests for the odmg interfaces: DArray, DBag, DList, DMap, DSet.
      + DArray has resize.
      + DBag has methods union, intersection, difference, and occurances.
      + DList has method concat.
      + DSet has methods union, intersection, difference, subsetOf, supersetOf, 
        properSubsetOf, properSupersetOf.
      + DMap has no additional methods beyond Map.
    + Generic tests for LargeCollection and LargeList interfaces.
    + Test Iterator and ListIterator. Specifically:
        + remove behavior
        + ListIterator bi-directional, add(), and set() behavior
    + Test all of the RegularD* ODMG implementations.
    + LargeList and LargeCollection interfaces tests.
    + Test VeryLargeDArray with standard collection tests.
        + Test RandomAccessLargeListIterator via standard collection tests on VeryLargeDArray.
    o- Test VeryLargeDArray with large set of objects. Make sure it lives up to its name. I.e., you should not run out of 
       memory with a very large collection (need a real database to do this).
       - Test RandomAccessLargeListIterator during above large array tests.
    o- Generic tests for org.odmg.QueryableCollection (REQUIRES OQL PARSER). 

DatabaseRoot:
    + Test getting Schema.
    + Check that create date and description are set properly. 
    + Check that description can be set.

Schema:
    + Test getting LogicalClassSchema.
    + Test getting ClassVersionSchema by class Id.
    + Test adding LogicalClassSchema.
    + Test removing LogicalClassSchema.
    + Check that create date and description are set properly. 
    + Check that description can be set.

LogicalClassSchema:
    + Check that create date and description are set properly. 
    + Check that description can be set.
    + Test adding ClassVersionSchema. This should also add the ClassVersionSchema to the Schema
      class id map.
    + Test getting all ClassVersionSchemas.
    + Test getting latest ClassVersionSchema.
    + Test removing ClassVersionSchema. This should also remove the ClassVersionSchema from the Schema
      class id map.

ClassVersionSchema:
    + Check that create date is set properly. 
    + Test getting persistent and transient fields.
    + Test getting and setting bytecodes.

ObjectServer:
    - (WAIT UNTIL STABLE) Interface test to generically test ObjectServer interfaces.
